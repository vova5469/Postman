{
	"info": {
		"_postman_id": "c77c8178-5e10-4190-a20c-921b368c72bd",
		"name": "HW_2(tests)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Отправить запрос. Статус код 200\r",
							"\r",
							"// pm.test(\"Status code is 200\", function() {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"\r",
							"// Проверить, что в body приходит правильный string\r",
							"\r",
							"pm.test(\"Correct type\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body в json\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let cor_name = jsonData.name;\r",
							"let cor_age = jsonData.age;\r",
							"let cor_salary = jsonData.salary;\r",
							"let family = jsonData.family;\r",
							"let salary_4 = jsonData.family.u_salary_1_5_year;\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name вбить руками) \r",
							"\r",
							"pm.test(\"Correct name\", function() {\r",
							"    pm.expect(cor_name).to.include(\"Vladimir\");\r",
							"});\r",
							"\r",
							"//  Проверить, что age в ответе равно age s request (age вбить руками)\r",
							"\r",
							"pm.test(\"Correct age\", function() {\r",
							"    pm.expect(cor_age).to.include(\"37\");\r",
							"});\r",
							"\r",
							"//  Проверить, что salary в ответе равно salary s request (salary вбить руками)\r",
							"\r",
							"pm.test(\"Correct salary\", function() {\r",
							"    pm.expect(cor_salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"let req = request.data;\r",
							"\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary;\r",
							"let req_salary_1_5 = req.salary*4;\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"\r",
							"pm.test(\"Correct name_req\", function () {\r",
							"    pm.expect(cor_name).to.include(\"Vladimir\");\r",
							"});\r",
							"\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"\r",
							"pm.test(\"Correct age_req\", function () {\r",
							"    pm.expect(cor_age).to.include(\"37\");\r",
							"});\r",
							"\r",
							"// Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Correct salary_req\", function () {\r",
							"    pm.expect(cor_salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр family из response \r",
							"\r",
							"console.log(\"response.family -\", family)\r",
							"\r",
							"// Проверить, что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"pm.test(\"Salary_1_5\", function() {\r",
							"    pm.expect(req_salary_1_5).to.eql(salary_4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vladimir",
							"type": "default"
						},
						{
							"key": "age",
							"value": "37",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// // Статус код 200\r",
							"\r",
							"// pm.test(\"Status code is 200\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"\r",
							"// Спарсить response body в json\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let start_salary = jsonData.start_qa_salary;\r",
							"let month_6_salary = jsonData.qa_salary_after_6_months;\r",
							"let month_12_salary = jsonData.qa_salary_after_12_months;\r",
							"let month_18_salary = jsonData[\"qa_salary_after_1.5_year\"];\r",
							"let month_42_salary = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"let person_u_name = jsonData.person.u_name;\r",
							"let person_u_age = jsonData.person.u_age;\r",
							"let salary_5_years = jsonData.person.u_salary_5_years;\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"let req = request.data;\r",
							"\r",
							"let req_salary = req.salary;\r",
							"let req_age = req.age;\r",
							"\r",
							"// // Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр start_qa_salary\r",
							"\r",
							"pm.test(\"Check_1\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"\r",
							"pm.test(\"Check_2\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"\r",
							"pm.test(\"Check_3\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"pm.test(\"Check_4\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"Check_5\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"// Проверить, что параметр json response имеет параметр person\r",
							"\r",
							"pm.test(\"Check_6\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData)).to.include(\"person\");\r",
							"});\r",
							"\r",
							"// Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Correct salary_1\", function () {\r",
							"    pm.expect(String(start_salary)).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Correct salary_2\", function () {\r",
							"    pm.expect(month_6_salary).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Correct salary_3\", function () {\r",
							"    pm.expect(month_12_salary).to.eql(req_salary*2.7);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Correct salary_4\", function () {\r",
							"    pm.expect(month_18_salary).to.eql(req_salary*3.3);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Correct salary_5\", function () {\r",
							"    pm.expect(month_42_salary).to.eql(req_salary*3.8);\r",
							"});\r",
							"\r",
							"// Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Person_name\", function () {\r",
							"    pm.expect(String(person_u_name[1])).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр u_age равен age из request (age забрать из request)\r",
							"\r",
							"pm.test(\"Person_age\", function() {\r",
							"    pm.expect(String(person_u_age)).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Future_salary\", function() {\r",
							"    pm.expect(salary_5_years).to.eql(req_salary*4.2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vladimir",
							"type": "default"
						},
						{
							"key": "age",
							"value": "37",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Спарсить response body в json\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let resp_name = jsonData.name;\r",
							"let resp_age = jsonData.age;\r",
							"let resp_salary = String(jsonData.salary);\r",
							"let resp_family = jsonData.family;\r",
							"let resp_dog = jsonData.family.pets.dog;\r",
							"let resp_name_dog = jsonData.family.pets.dog.name;\r",
							"let resp_age_dog = jsonData.family.pets.dog.age;\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary\r",
							"\r",
							"// Запрос статус код 200\r",
							"\r",
							"// pm.test(\"Status code is 200\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"\r",
							"pm.test(\"Name\", function () {\r",
							"    pm.expect(resp_name).to.include(req_name);\r",
							"});\r",
							"\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"\r",
							"pm.test(\"Age\", function () {\r",
							"    pm.expect(resp_age).to.include(req_age);\r",
							"});\r",
							"\r",
							"// Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр family из response\r",
							"\r",
							"console.log(\"response_family - \", resp_family)\r",
							"\r",
							"// Проверить, что у параметра dog есть параметры name\r",
							"\r",
							"pm.test(\"Dog_name\", function () {\r",
							"    pm.expect(JSON.stringify(resp_dog)).to.include(\"name\");\r",
							"});\r",
							"\r",
							"// Проверить, что у параметра dog есть параметры age\r",
							"\r",
							"pm.test(\"Dog_age\", function () {\r",
							"    pm.expect(JSON.stringify(resp_dog)).to.include(\"age\");\r",
							"});\r",
							"\r",
							"// Проверить, что параметр name имеет значение Luky\r",
							"\r",
							"pm.test(\"Correct_Name\", function () {\r",
							"    pm.expect(resp_name_dog).to.include(\"Luky\");\r",
							"});\r",
							"\r",
							"// Проверить, что параметр age имеет значение 4\r",
							"\r",
							"pm.test(\"Correct_Age\", function () {\r",
							"    pm.expect(resp_age_dog).to.eql(4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vladimir",
							"type": "default",
							"disabled": true
						},
						{
							"key": "age",
							"value": "37",
							"type": "default",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vladimir&age=37&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vladimir"
						},
						{
							"key": "age",
							"value": "37"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Спарсить response body в json\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let resp_name = jsonData.name;\r",
							"let resp_age = String(jsonData.age);\r",
							"let resp_salary = jsonData.salary;\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = req.salary\r",
							"\r",
							"// Запрос статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"\r",
							"pm.test(\"Name\", function () {\r",
							"    pm.expect(resp_name).to.include(req_name);\r",
							"});\r",
							"\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"\r",
							"pm.test(\"Age\", function () {\r",
							"    pm.expect(resp_age).to.include(req_age);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр salary из request\r",
							"\r",
							"console.log(\"Request_salary -\", req_salary)\r",
							"\r",
							"// Вывести в консоль параметр salary из response\r",
							"\r",
							"console.log(\"Response_salary\", resp_salary)\r",
							"\r",
							"// Вывести в консоль 0-й элемент параметра salary из response\r",
							"\r",
							"console.log(\"Response_salary_0 -\", resp_salary[0])\r",
							"\r",
							"// Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
							"\r",
							"console.log(\"Request_salary_1 -\", resp_salary[1])\r",
							"\r",
							"// Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"\r",
							"console.log(\"Request_salary_2 -\", resp_salary[2])\r",
							"\r",
							"// Проверить что 0-й элемент параметра salary равен salary из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Equality_salary_1\", function () {\r",
							"    pm.expect(String(resp_salary[0])).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// Проверить что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Equality_salary_2\", function () {\r",
							"    pm.expect(resp_salary[1]).to.eql(String(req_salary*2));\r",
							"});\r",
							"\r",
							"// // Проверить что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request)\r",
							"\r",
							"pm.test(\"Equality_salary_3\", function () {\r",
							"    pm.expect(resp_salary[2]).to.eql(String(req_salary*3));\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", \"Vladimir\");\r",
							"pm.environment.set(\"age\", 37);\r",
							"pm.environment.set(\"salary\", 2000);\r",
							"\r",
							"// Написать цикл, который выведет в консоль по порядку элементы списка из параметра salary\r",
							"\r",
							"\r",
							"for (let i = 0; i<3; i++) {\r",
							"    console.log(jsonData.salary[i])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Vladimir&age=37&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vladimir"
						},
						{
							"key": "age",
							"value": "37"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		}
	]
}